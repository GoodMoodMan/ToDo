{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noam\\\\task-management\\\\src\\\\components\\\\BodyTask.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport './App_comp.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction BodyTask(props) {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [edit_id, setEditId] = useState(\"\");\n  const getMaxID = taskList => {\n    var id = 0;\n    var max_id = 0;\n    for (const task of taskList) {\n      id = parseInt(task.id.replace(/^\\D+/g, ''));\n      if (id > max_id) max_id = id;\n    }\n    return max_id;\n  };\n  const handleAddTask = () => {\n    const newTaskId = \"Task \" + (getMaxID(props.taskList) + 1);\n    const newTaskObj = {\n      id: newTaskId,\n      content: 'newTask',\n      date: new Date()\n    };\n    const updatedTasks = [...props.taskList, newTaskObj];\n    props.setTasks(updatedTasks);\n  };\n  const handleDragEnd = result => {\n    console.log(\"YEAR\");\n    if (!result.destination) return;\n    const updatedTasks = [...props.taskList];\n    // if dropped on trash can dont return removed task to the task list\n    if (result.destination.droppableId == 'trash') {\n      updatedTasks.splice(result.source.index, 1);\n    } else {\n      const [removed] = updatedTasks.splice(result.source.index, 1);\n      updatedTasks.splice(result.destination.index, 0, removed);\n    }\n    props.setTasks(updatedTasks);\n  };\n  const handleSave = () => {\n    const update = [...props.taskList];\n    var index = update.findIndex(task => task.id === edit_id);\n    if (text.trim() !== '') {\n      update[index].content = text;\n    }\n    props.setTasks(update);\n    setEditId(\"\");\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && text.trim() !== '') {\n      handleSave();\n    }\n  };\n  const handleDeleteAll = () => {\n    props.setTasks([]);\n  };\n  const handleDateChange = (taskID, date) => {\n    const update = [...props.taskList];\n    var index = update.findIndex(task => task.id === taskID);\n    update[index].date = date;\n    props.setTasks(update);\n  };\n  const grid = 8;\n  const getItemStyle = (isDragging, draggableStyle, snapshot, deadline) => {\n    const defaultStyle = {\n      // some basic styles to make the items look a bit nicer\n      userSelect: \"none\",\n      padding: grid * 2,\n      margin: `0 0 ${grid}px 0`,\n      // change background color if dragging\n      background: isDragging ? 'lightgreen' : 'grey',\n      // styles we need to apply on draggables\n      ...draggableStyle\n    };\n    if (isDragging && snapshot.draggingOver == 'trash') {\n      return {\n        ...defaultStyle,\n        opacity: 0\n      };\n    }\n\n    // Time untill deadline\n    const timeDiff = new Date(deadline) - new Date().getTime();\n    const warningThreshold = 3 * 24 * 60 * 60 * 1000; // 3 days in milliseconds\n    const dangerThreshold = 24 * 60 * 60 * 1000; // 1 day in milliseconds\n\n    // Apply different background colors based on the time difference\n    if (timeDiff < 0) {\n      // Past the deadline, apply red background\n      return {\n        ...defaultStyle,\n        background: '#FF7F7F'\n      };\n    } else if (timeDiff < dangerThreshold) {\n      // Within 24 hours of the deadline, apply orange background\n      return {\n        ...defaultStyle,\n        background: '#FFA54F'\n      };\n    } else if (timeDiff < warningThreshold) {\n      // Within 3 days of the deadline, apply yellow background\n      return {\n        ...defaultStyle,\n        background: '#FFF380'\n      };\n    }\n    return defaultStyle;\n  };\n  const getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n    padding: grid\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center display-1 text-uppercase\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"login-heading\",\n        children: \"Task List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container d-flex flex-row justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary me-3\",\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger ms-3\",\n        onClick: handleDeleteAll,\n        children: \"Delete All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container d-flex flex-column align-items-center mt-2\",\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-task\",\n          children: /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"droppable\",\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rounded\",\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              style: getListStyle(snapshot.isDraggingOver),\n              children: [props.taskList.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: task.id,\n                index: index,\n                children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"rounded\",\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  style: getItemStyle(snapshot.isDragging, provided.draggableProps.style, snapshot, task.date),\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"container d-flex flex-column\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"container d-flex justify-content-center align-items-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"d-inline-block me-auto p-2\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-block\",\n                          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: task.content\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 187,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 186,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 185,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"container d-flex flex-column\",\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          children: \"Finish Date:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 191,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                          selected: new Date(task.date),\n                          onChange: date => handleDateChange(task.id, date),\n                          className: \"datepicker\",\n                          dateFormat: \"dd/MM/yyyy\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 192,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 190,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        onClick: () => {\n                          if (task.id !== edit_id) setEditId(task.id);else setEditId(null);\n                        },\n                        className: \"ms-3 btn btn-primary btn-sm\",\n                        children: \"Edit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 202,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `form-container mt-2 ${edit_id === task.id ? 'expanded' : ''}`,\n                      children: edit_id === task.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-container mt-2 expanded\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"mb-3\",\n                          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                            className: \"form-control\",\n                            defaultValue: task.content,\n                            onKeyDown: handleKeyDown,\n                            onChange: e => setText(e.target.value)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 214,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 213,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"btn btn-primary mt-2\",\n                          onClick: handleSave,\n                          children: \"Save\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 221,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 212,\n                        columnNumber: 33\n                      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 25\n                }, this)\n              }, task.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 21\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"trash\",\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `trash-can`,\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrash,\n                size: \"5x\",\n                className: \"trash-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n_s(BodyTask, \"mVuLrIfDTWyaf61GUGBrPH2LwBo=\");\n_c = BodyTask;\nexport default BodyTask;\nvar _c;\n$RefreshReg$(_c, \"BodyTask\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","FontAwesomeIcon","faTrash","DatePicker","jsxDEV","_jsxDEV","Fragment","_Fragment","BodyTask","props","_s","text","setText","edit_id","setEditId","getMaxID","taskList","id","max_id","task","parseInt","replace","handleAddTask","newTaskId","newTaskObj","content","date","Date","updatedTasks","setTasks","handleDragEnd","result","console","log","destination","droppableId","splice","source","index","removed","handleSave","update","findIndex","trim","handleKeyDown","e","key","handleDeleteAll","handleDateChange","taskID","grid","getItemStyle","isDragging","draggableStyle","snapshot","deadline","defaultStyle","userSelect","padding","margin","background","draggingOver","opacity","timeDiff","getTime","warningThreshold","dangerThreshold","getListStyle","isDraggingOver","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDragEnd","provided","droppableProps","ref","innerRef","style","map","draggableId","draggableProps","dragHandleProps","selected","onChange","dateFormat","type","defaultValue","onKeyDown","target","value","placeholder","icon","size","_c","$RefreshReg$"],"sources":["C:/Users/Noam/task-management/src/components/BodyTask.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport './App_comp.css';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nfunction BodyTask(props) {\r\n\r\n  const [text, setText] = useState(\"\");\r\n  const [edit_id, setEditId] = useState(\"\");\r\n\r\n\r\n\r\n  const getMaxID = (taskList) => {\r\n    var id = 0;\r\n    var max_id = 0;\r\n    for (const task of taskList) {\r\n      id = parseInt(task.id.replace(/^\\D+/g, ''));\r\n      if (id > max_id) max_id = id;\r\n    }\r\n    return max_id;\r\n  }\r\n\r\n  const handleAddTask = () => {\r\n    const newTaskId = \"Task \" + (getMaxID(props.taskList) + 1);\r\n    const newTaskObj = { id: newTaskId, content: 'newTask', date: new Date() };\r\n    const updatedTasks = [...props.taskList, newTaskObj];\r\n    props.setTasks(updatedTasks);\r\n  };\r\n\r\n  const handleDragEnd = (result) => {\r\n    console.log(\"YEAR\");\r\n    if (!result.destination) return;\r\n\r\n    const updatedTasks = [...props.taskList];\r\n    // if dropped on trash can dont return removed task to the task list\r\n    if (result.destination.droppableId == 'trash') {\r\n      updatedTasks.splice(result.source.index, 1);\r\n    }\r\n    else {\r\n      const [removed] = updatedTasks.splice(result.source.index, 1);\r\n      updatedTasks.splice(result.destination.index, 0, removed);\r\n    }\r\n\r\n    props.setTasks(updatedTasks);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const update = [...props.taskList];\r\n    var index = update.findIndex(task => task.id === edit_id);\r\n    if (text.trim() !== '') {\r\n      update[index].content = text;\r\n    }\r\n    props.setTasks(update);\r\n    setEditId(\"\");\r\n  }\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter' && text.trim() !== '') {\r\n      handleSave();\r\n    }\r\n  };\r\n\r\n  const handleDeleteAll = () => {\r\n\r\n    props.setTasks([]);\r\n  }\r\n\r\n  const handleDateChange = (taskID, date) => {\r\n    const update = [...props.taskList];\r\n    var index = update.findIndex(task => task.id === taskID);\r\n    update[index].date = date;\r\n    props.setTasks(update);\r\n\r\n  }\r\n\r\n  const grid = 8;\r\n  const getItemStyle = (isDragging, draggableStyle, snapshot, deadline) => {\r\n    const defaultStyle = {\r\n      // some basic styles to make the items look a bit nicer\r\n      userSelect: \"none\",\r\n      padding: grid * 2,\r\n      margin: `0 0 ${grid}px 0`,\r\n\r\n      // change background color if dragging\r\n      background: isDragging ? 'lightgreen' : 'grey',\r\n\r\n      // styles we need to apply on draggables\r\n      ...draggableStyle,\r\n    };\r\n\r\n\r\n    if (isDragging && snapshot.draggingOver == 'trash') {\r\n      return {\r\n        ...defaultStyle,\r\n        opacity: 0,\r\n      };\r\n    }\r\n\r\n    // Time untill deadline\r\n    const timeDiff = new Date(deadline) - new Date().getTime();\r\n\r\n    const warningThreshold = 3 * 24 * 60 * 60 * 1000; // 3 days in milliseconds\r\n    const dangerThreshold = 24 * 60 * 60 * 1000; // 1 day in milliseconds\r\n\r\n    // Apply different background colors based on the time difference\r\n    if (timeDiff < 0) {\r\n      // Past the deadline, apply red background\r\n      return {\r\n        ...defaultStyle,\r\n        background: '#FF7F7F',\r\n      };\r\n    } else if (timeDiff < dangerThreshold) {\r\n      // Within 24 hours of the deadline, apply orange background\r\n      return {\r\n        ...defaultStyle,\r\n        background: '#FFA54F',\r\n      };\r\n    } else if (timeDiff < warningThreshold) {\r\n      // Within 3 days of the deadline, apply yellow background\r\n      return {\r\n        ...defaultStyle,\r\n        background: '#FFF380',\r\n      };\r\n    }\r\n    \r\n    return defaultStyle;\r\n  };\r\n\r\n  const getListStyle = isDraggingOver => ({\r\n    background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n    padding: grid,\r\n\r\n  });\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center display-1 text-uppercase\">\r\n\r\n        <span className=\"login-heading\">Task List</span>\r\n      </h1>\r\n      <div className='container d-flex flex-row justify-content-center'>\r\n        <button className=\"btn btn-primary me-3\" onClick={handleAddTask}>\r\n          Add Task\r\n        </button>\r\n        <button className=\"btn btn-danger ms-3\" onClick={handleDeleteAll}>\r\n          Delete All\r\n        </button>\r\n      </div>\r\n      <div className='container d-flex flex-column align-items-center mt-2'>\r\n        <DragDropContext onDragEnd={handleDragEnd} >\r\n          <div className='container-task'>\r\n            <Droppable droppableId=\"droppable\">\r\n              {(provided, snapshot) => (\r\n                <div className='rounded'\r\n                  {...provided.droppableProps}\r\n                  ref={provided.innerRef}\r\n                  style={getListStyle(snapshot.isDraggingOver)}\r\n                >\r\n                  {props.taskList.map((task, index) => (\r\n\r\n\r\n                    <Draggable key={task.id} draggableId={task.id} index={index} >\r\n                      {(provided, snapshot) => (\r\n                        <div className='rounded'\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          style={getItemStyle(\r\n                            snapshot.isDragging,\r\n                            provided.draggableProps.style,\r\n                            snapshot,\r\n                            task.date\r\n                          )}\r\n                        >\r\n                          <div className='container d-flex flex-column'>\r\n                            <div className='container d-flex justify-content-center align-items-center'>\r\n\r\n                              <div className='d-inline-block me-auto p-2'>\r\n                                <div className='text-block'>\r\n                                  <strong>{task.content}</strong>\r\n                                </div>\r\n                              </div>\r\n                              <div className='container d-flex flex-column'>\r\n                                <p>Finish Date:</p>\r\n                                <DatePicker\r\n\r\n\r\n                                  selected={new Date(task.date)}\r\n                                  onChange={(date) => handleDateChange(task.id, date)}\r\n                                  className='datepicker'\r\n                                  dateFormat=\"dd/MM/yyyy\"\r\n                                />\r\n                              </div>\r\n\r\n                              <button type=\"button\" onClick={() => {\r\n                                if (task.id !== edit_id) setEditId(task.id);\r\n                                else setEditId(null);\r\n                              }}\r\n\r\n                                className=\"ms-3 btn btn-primary btn-sm\">Edit</button>\r\n                            </div>\r\n                            <div className={`form-container mt-2 ${edit_id === task.id ? 'expanded' : ''}`}>\r\n                              {edit_id === task.id ? (\r\n\r\n                                <div className=\"form-container mt-2 expanded\">\r\n                                  <div className=\"mb-3\">\r\n                                    <textarea\r\n                                      className=\"form-control\"\r\n                                      defaultValue={task.content}\r\n                                      onKeyDown={handleKeyDown}\r\n                                      onChange={(e) => setText(e.target.value)}\r\n                                    />\r\n                                  </div>\r\n                                  <button\r\n                                    className=\"btn btn-primary mt-2\"\r\n                                    onClick={handleSave}\r\n                                  >\r\n                                    Save\r\n                                  </button>\r\n                                </div>\r\n\r\n                              ) : <></>\r\n\r\n                              }\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                    </Draggable>\r\n\r\n\r\n\r\n\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n          <div className='mt-3'>\r\n            <Droppable droppableId='trash' >\r\n              {(provided, snapshot) => (\r\n                <div\r\n                  className={`trash-can`}\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n\r\n                >\r\n                  <FontAwesomeIcon icon={faTrash} size='5x' className=\"trash-icon\" />\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n\r\n\r\n\r\n        </DragDropContext>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default BodyTask;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}