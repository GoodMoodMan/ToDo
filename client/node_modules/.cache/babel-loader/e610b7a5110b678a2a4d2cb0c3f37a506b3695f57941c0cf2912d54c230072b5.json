{"ast":null,"code":"import _slicedToArray from\"C:/Users/Noam/task-management/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import'./App.css';import Header from'./components/Header';import Body from'./components/Body';import HeaderTask from'./components/HeaderTask';import BodyTask from'./components/BodyTask';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var server_ip='192.168.1.13';fetch(\"http://\".concat(server_ip,\":3001\")).then(function(response){return response.text();}).then(function(data){// Handle the response data\nconsole.log(data);}).catch(function(error){// Handle the error\nconsole.error(error);});function App(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),true_username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loggedin=_useState4[0],setLoggedin=_useState4[1];var _useState5=useState(1),_useState6=_slicedToArray(_useState5,2),curr_tab=_useState6[0],setCurr_tab=_useState6[1];var _useState7=useState([{id:'task-1',content:'Task 1',date:new Date()},{id:'task-2',content:'Task 2',date:new Date()},{id:'task-3',content:'Task 3',date:new Date()}]),_useState8=_slicedToArray(_useState7,2),tasks=_useState8[0],setTasks=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),message=_useState10[0],setMessage=_useState10[1];var _useState11=useState(-1),_useState12=_slicedToArray(_useState11,2),alert_type=_useState12[0],setAlertType=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),guest=_useState14[0],setGuest=_useState14[1];useEffect(function(){// if user is a guest dont post to server\nif(guest)return;// this useEffect hook gets called on any change to tasks,\n// putting the new task list to server using saved username\nconsole.log(\"update\");fetch(\"http://\".concat(server_ip,\":3001/users/\").concat(true_username,\"/tasks\"),{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify({tasks:tasks})}).then(function(response){if(response.ok){console.log('Task list updated successfully');}else{console.error('Failed to update task list:',response.statusText);}}).catch(function(error){console.error('Error occurred:',error);});console.log(\"finish update\");},[tasks]);// every change to current tab, reset alert\nuseEffect(function(){setAlertType(-1);},[curr_tab]);var HandleLogin=function HandleLogin(username,password){console.log(\"connect\");fetch(\"http://\".concat(server_ip,\":3001/users/login\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username:username,password:password})}).then(function(response){// Handle the response from the server\nif(response.status===200){// Login successful\nsetMessage('Login Successful');setAlertType(1);return response.json();// Parse the response body as JSON\n}else if(response.status===401){// Invalid password\nsetMessage('Wrong Password');setAlertType(0);throw new Error('Wrong password');}else if(response.status===404){// User not found\nsetMessage('User not found');setAlertType(0);throw new Error('User not found');}else{// Other errors\nconsole.error('Error occurred:',response.statusText);throw new Error('Error occurred');}}).then(function(data){// Access the parsed data\nsetUsername(username);setLoggedin(true);setTasks(data.tasks);console.log(data);}).catch(function(error){console.error('Error occurred:',error);});};// SERVER SIGNUP\nvar HandleSignup=function HandleSignup(username,password,confirmPassword){if(username.trim()===''){setMessage('Username cannot be empty!');setAlertType(0);return;}if(password.trim()===''){setMessage('Password cannot be empty!');setAlertType(0);return;}if(password!==confirmPassword){setMessage('Passwords do not match!');setAlertType(0);return;}fetch(\"http://\".concat(server_ip,\":3001/users/signup\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username:username,password:password})}).then(function(response){// Handle the response from the server\nif(response.status===200){// Signup successful\nsetMessage('Signup Successful');setAlertType(1);return response.json();// Parse the response body as JSON\n}else if(response.status===401){// Username Taken\nsetMessage('Username Already Taken');setAlertType(0);throw new Error('Username Taken');}else{// Other errors\nconsole.error('Error occurred:',response.statusText);throw new Error('Error occurred');}}).catch(function(error){console.error('Error occurred:',error);});};var HandleLogoff=function HandleLogoff(){setAlertType(-1);setLoggedin(false);setGuest(false);};var HandleGuest=function HandleGuest(){setLoggedin(true);setGuest(true);};if(!loggedin){return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{curr_tab:curr_tab,setCurr_tab:setCurr_tab}),/*#__PURE__*/_jsx(Body,{HandleSignup:HandleSignup,curr_tab:curr_tab,setCurr_tab:setCurr_tab,HandleLogin:HandleLogin,message:message,alert_type:alert_type,HandleGuest:HandleGuest})]});}else{return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(HeaderTask,{HandleLogoff:HandleLogoff}),/*#__PURE__*/_jsx(BodyTask,{taskList:tasks,setTasks:setTasks})]});}}export default App;","map":{"version":3,"names":["useState","useEffect","Header","Body","HeaderTask","BodyTask","jsx","_jsx","jsxs","_jsxs","server_ip","fetch","concat","then","response","text","data","console","log","catch","error","App","_useState","_useState2","_slicedToArray","true_username","setUsername","_useState3","_useState4","loggedin","setLoggedin","_useState5","_useState6","curr_tab","setCurr_tab","_useState7","id","content","date","Date","_useState8","tasks","setTasks","_useState9","_useState10","message","setMessage","_useState11","_useState12","alert_type","setAlertType","_useState13","_useState14","guest","setGuest","method","headers","body","JSON","stringify","ok","statusText","HandleLogin","username","password","status","json","Error","HandleSignup","confirmPassword","trim","HandleLogoff","HandleGuest","className","children","taskList"],"sources":["C:/Users/Noam/task-management/src/App.js"],"sourcesContent":["\r\nimport { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport Body from './components/Body';\r\nimport HeaderTask from './components/HeaderTask';\r\nimport BodyTask from './components/BodyTask';\r\n\r\nconst server_ip = '192.168.1.13';\r\n\r\nfetch(`http://${server_ip}:3001`)\r\n  .then(response => response.text())\r\n  .then(data => {\r\n    // Handle the response data\r\n    console.log(data);\r\n  })\r\n  .catch(error => {\r\n    // Handle the error\r\n    console.error(error);\r\n  });\r\n\r\n\r\nfunction App() {\r\n\r\n  const [true_username, setUsername] = useState(\"\");\r\n  const [loggedin, setLoggedin] = useState(false);\r\n  const [curr_tab, setCurr_tab] = useState(1);\r\n  const [tasks, setTasks] = useState([\r\n    { id: 'task-1', content: 'Task 1' , date: new Date()},\r\n    { id: 'task-2', content: 'Task 2' , date: new Date()},\r\n    { id: 'task-3', content: 'Task 3' , date: new Date()},\r\n  ]);\r\n\r\n  const [message, setMessage] = useState('');\r\n  const [alert_type, setAlertType] = useState(-1);\r\n\r\n  const [guest, setGuest] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    // if user is a guest dont post to server\r\n    if (guest) return;\r\n    // this useEffect hook gets called on any change to tasks,\r\n    // putting the new task list to server using saved username\r\n    console.log(\"update\");\r\n    fetch(`http://${server_ip}:3001/users/${true_username}/tasks`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ tasks }),\r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          console.log('Task list updated successfully');\r\n\r\n        } else {\r\n          console.error('Failed to update task list:', response.statusText);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error occurred:', error);\r\n      });\r\n    console.log(\"finish update\");\r\n\r\n\r\n  }, [tasks])\r\n\r\n  // every change to current tab, reset alert\r\n  useEffect(() => {\r\n    setAlertType(-1);\r\n\r\n  }, [curr_tab])\r\n\r\n  const HandleLogin = (username, password) => {\r\n    console.log(\"connect\");\r\n    fetch(`http://${server_ip}:3001/users/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ username, password })\r\n    })\r\n      .then(response => {\r\n\r\n        // Handle the response from the server\r\n        if (response.status === 200) {\r\n          // Login successful\r\n          setMessage('Login Successful');\r\n          setAlertType(1);\r\n          return response.json(); // Parse the response body as JSON\r\n        } else if (response.status === 401) {\r\n          // Invalid password\r\n          setMessage('Wrong Password');\r\n          setAlertType(0);\r\n          throw new Error('Wrong password');\r\n        } else if (response.status === 404) {\r\n          // User not found\r\n          setMessage('User not found');\r\n          setAlertType(0);\r\n          throw new Error('User not found');\r\n        } else {\r\n          // Other errors\r\n          console.error('Error occurred:', response.statusText);\r\n          throw new Error('Error occurred');\r\n        }\r\n      })\r\n      .then(data => {\r\n        // Access the parsed data\r\n\r\n        setUsername(username);\r\n        setLoggedin(true);\r\n        setTasks(data.tasks);\r\n        console.log(data);\r\n\r\n      })\r\n      .catch(error => {\r\n        console.error('Error occurred:', error);\r\n      });\r\n  };\r\n\r\n  // SERVER SIGNUP\r\n  const HandleSignup = (username, password,confirmPassword) => {\r\n    if (username.trim() === '') {\r\n      setMessage('Username cannot be empty!');\r\n      setAlertType(0);\r\n      return;\r\n    }\r\n\r\n    if (password.trim() === '') {\r\n      setMessage('Password cannot be empty!');\r\n      setAlertType(0);\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match!');\r\n      setAlertType(0);\r\n      return;\r\n    }\r\n\r\n\r\n    fetch(`http://${server_ip}:3001/users/signup`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ username, password })\r\n    })\r\n      .then(response => {\r\n        // Handle the response from the server\r\n        if (response.status === 200) {\r\n          // Signup successful\r\n          setMessage('Signup Successful');\r\n          setAlertType(1);\r\n\r\n          return response.json(); // Parse the response body as JSON\r\n        } else if (response.status === 401) {\r\n          // Username Taken\r\n          setMessage('Username Already Taken');\r\n          setAlertType(0);\r\n          throw new Error('Username Taken');\r\n        } else {\r\n          // Other errors\r\n\r\n          console.error('Error occurred:', response.statusText);\r\n          throw new Error('Error occurred');\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error occurred:', error);\r\n      });\r\n  }\r\n\r\n  const HandleLogoff = () => {\r\n    setAlertType(-1);\r\n    setLoggedin(false);\r\n    setGuest(false);\r\n  }\r\n\r\n\r\n  const HandleGuest = () => {\r\n    setLoggedin(true);\r\n    setGuest(true);\r\n  }\r\n\r\n  if (!loggedin) {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header curr_tab={curr_tab} setCurr_tab={setCurr_tab}></Header>\r\n        <Body HandleSignup={HandleSignup} curr_tab={curr_tab} setCurr_tab={setCurr_tab} HandleLogin={HandleLogin}\r\n          message={message} alert_type={alert_type} HandleGuest = {HandleGuest}></Body>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  else {\r\n    return (\r\n      <div className=\"App\">\r\n        <HeaderTask HandleLogoff={HandleLogoff}></HeaderTask>\r\n        <BodyTask taskList={tasks} setTasks={setTasks}></BodyTask>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}